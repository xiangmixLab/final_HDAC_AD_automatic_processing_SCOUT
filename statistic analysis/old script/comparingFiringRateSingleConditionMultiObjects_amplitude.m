function [firingRateSmoothing,sumFiringRateObject,firingRateSmoothing2,radius,posObjects] = comparingFiringRateSingleConditionMultiObjects_amplitude(firingRate,binsize,countTime, pos,variables,colorscale,plotting)
%maxCount = 4;
% position of objects
% objects in trainning: (141,70);(141,193)
% binsize = 15; %%was 5
% Object1 = pos1;
% Object2 = pos2;
% 
% 
% posObject1 = [ceil(Object1/binsize)];
% posObject2 = [ceil(Object2/binsize)];
% 
% posObjects = [posObject1;posObject2];
% radiustraining = floor((postrainingObject2(2)-postrainingObject1(2))/4);
% radiustesting = floor((postestingObject2(2)-postestingObject1(2))/4);

%note: the 'firingRate' parameter should be 'countAll' generated by calculatingCellSpatialLinearTrackForSingleData

[m,n]=size(pos);
posObjects = ceil(pos./binsize);
% radius = floor(min(pdist(posObjects))/2)
radius = 3;

sumFiringRate = calculatingSumFiringRate(firingRate,radius,countTime);
size(sumFiringRate)
max(sumFiringRate(:))
sumFiringRateObject = zeros(1,size(posObjects,1));
if sum(posObjects)~=0
for i = 1:size(posObjects,1)
    sumFiringRateObject(i) = sumFiringRate(size(sumFiringRate,1)-posObjects(i,2)+1,posObjects(i,1));
end
else
    sumFiringRateObject=nan(1,size(posObjects,1));
end
%     firingRateSmoothing = filter2DMatrices(sumFiringRate, 1);
firingRateSmoothing = sumFiringRate;
      firingRateSmoothing2 = nan(size(firingRateSmoothing)+1);
      firingRateSmoothing2(1:end-1,1:end-1) = firingRateSmoothing;
%       firingRateSmoothing2(isnan(firingRateSmoothing2))=0;

if plotting==1
    
folderName = 'FiguresCellSpatial';
if ~exist(folderName,'dir')
    mkdir(folderName);
end
% fpath=[folderName '/'];

figure;

subplot(1,2,1)
   pcolor(firingRateSmoothing2);
   axis ij
% imagesc(firingRateSmoothing)
colormap(jet)
  %caxis([0,max(firingRateSmoothing(:))])
    %caxis([0,2500])
colorbar;
caxis(colorscale);
axis ij
%   set(gca, 'color', 'w', 'ydir', 'normal')
shading flat;
axis image
axis off
%     title(['Cell #', num2str(segment(i))],'FontName','Arial','FontSize',10,'FontWeight','bold')
hold on
% scatter(posObject{i}(1,1)+0.5,size(sumFiringRate,1)-posObject{i}(1,2)+0.5,binsize*5,'k','filled')
% scatter(posObject{i}(2,1)+0.5,size(sumFiringRate,1)-posObject{i}(2,2)+0.5,binsize*5,'k','filled')
if sum(posObjects)~=0
for i = 1:size(posObjects,1)
  scatter(posObjects(i,1),size(sumFiringRate,1)-posObjects(i,2)+1,binsize*5,'k','filled')
%     scatter(posObjects(i,1),posObjects(i,2),binsize*5,'k','filled')
  text(posObjects(i,1),size(sumFiringRate,1)-posObjects(i,2)-1,[num2str(i)],'FontSize',14);
%     text(posObjects(i,1),posObjects(i,2)+1,[num2str(i)]);
end
end

subplot(1,2,2)
b=bar(sumFiringRateObject,'FaceColor','flat');
b.CData(1,:) = [.5 0 0];
b.CData(2,:) = [0 0 0.5];

Objectstitle=cell(1,size(posObjects,1));
if sum(posObjects)~=0
for i=1:size(posObjects,1)
Objectstitle{i}=['Object',num2str(i),' [',num2str(posObjects(i,1)),',',num2str(posObjects(i,2)),']'];
Objectstitle{i}=['Obj',num2str(i)];
end
else
Objectstitle{1}=['No Object'];    
end
set(gca,'Xticklabel',Objectstitle,'FontName','Arial','FontSize',8)
% xtickangle(45)
ylabel(['Sum of ',variables],'FontSize',10,'FontName','Arial')

end
% saveas(gcf,fullfile(fpath,strcat('CellSpatialFiringMapComparison','.tif')))
% saveas(gcf,fullfile(fpath,strcat('CellSpatialFiringMapComparison','.fig')))



function sumFiringRate = calculatingSumFiringRate(firingRate,radius,countTime)
f = ones(2*radius-1);
idx = find(cellfun(@length,firingRate));
sumFiringRate = zeros(size(firingRate{idx(1)}));
for i = 1:length(firingRate)
    if isempty(firingRate{i})
        continue;
    end
    firingRate{i}(isnan(firingRate{i})) = 0;
    firingRate{i}(firingRate{i}==inf) = 0;
    sumFiringRate = sumFiringRate + conv2(firingRate{i},f,'same');
end
% sumFiringRate(countTime == 0) = 0;

